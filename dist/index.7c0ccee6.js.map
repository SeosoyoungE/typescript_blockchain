{"mappings":"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","sources":["app.js"],"sourcesContent":["var Word = /** @class */ (function () {\n    function Word(term, def) {\n        this.term = term;\n        this.def = def;\n    }\n    return Word;\n}());\nvar Dict = /** @class */ (function () {\n    function Dict() {\n        this.wordList = {};\n    }\n    Dict.prototype.add = function (word) {\n        if (!this.wordList[word.term]) {\n            this.wordList[word.term] = word.def;\n            console.log(\"\".concat(word.term, \" added\"));\n        }\n        else {\n            console.log(\"already exists\");\n        }\n    };\n    Dict.prototype.get = function (term) {\n        return this.wordList[term];\n    };\n    Dict.prototype.delete = function (word) {\n        if (this.wordList[word.term]) {\n            delete this.wordList[word.term];\n            console.log(\"\".concat(word.term, \" word deleted\"));\n        }\n        else {\n            console.log(\"not exists\");\n        }\n    };\n    Dict.prototype.update = function (word) {\n        if (this.wordList[word.term]) {\n            this.wordList[word.term] = word.def;\n            console.log(\"1 word updated\");\n        }\n        else {\n            console.log(\"not exists\");\n        }\n    };\n    Dict.prototype.showAll = function () {\n        var _this = this;\n        console.log(\"<dictionary showAll> total= \".concat(Object.keys(this.wordList).length));\n        Object.keys(this.wordList).forEach(function (i) {\n            console.log(\"\".concat(i, \": \").concat(_this.wordList[i]));\n        });\n    };\n    Dict.prototype.count = function () {\n        return Object.keys(this.wordList).length;\n    };\n    Dict.prototype.upsert = function (word) {\n        this.wordList[word.term] = word.def;\n    };\n    Dict.prototype.exists = function (word) {\n        if (this.wordList[word.term]) {\n            console.log(\"this is here\");\n        }\n        else {\n            console.log(\"not exists\");\n        }\n    };\n    Dict.prototype.bulkAdd = function (words) {\n        var _this = this;\n        var i = 0;\n        words.forEach(function (word) {\n            if (!_this.wordList[word.term]) {\n                _this.wordList[word.term] = word.def;\n                i++;\n            }\n            else {\n                console.log(\"\".concat(word.term, \" is already exists\"));\n            }\n        });\n        console.log(\"Total of \".concat(i, \" word added\"));\n    };\n    Dict.prototype.bulkDelete = function (words) {\n        var _this = this;\n        var i = 0;\n        words.forEach(function (word) {\n            if (_this.wordList[word.term]) {\n                delete _this.wordList[word.term];\n                i++;\n            }\n            else {\n                console.log(\"\".concat(word.term, \" is not exists\"));\n            }\n        });\n        console.log(\"Total of \".concat(i, \" word deleted\"));\n    };\n    return Dict;\n}());\nconsole.log(\"---------------start\");\n//new parameter\nvar dict = new Dict();\nvar kimchWord = new Word(\"kimch\", \"김치\");\nvar eggWord = new Word(\"egg\", \"달걀\");\n//test\n//dict.add(kimchWord);\n//dict.add(eggWord);\n// console.log(dict);\n// console.log(dict.get(\"kimch\"));\n// dict.delete(kimchWord);\n// console.log(dict);\n//dict.showAll();\n//console.log(dict.count());\n// dict.bulkAdd([kimchWord,eggWord]);\n// dict.showAll();\n// dict.delete(kimchWord);\n// dict.bulkDelete([kimchWord,eggWord]);\n// dict.showAll();\nconsole.log(\"---------------closed\");\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}